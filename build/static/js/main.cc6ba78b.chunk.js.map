{"version":3,"sources":["App.module.scss","components/work/work.module.scss","components/header/header.module.scss","assets/images/angular.png","assets/images/css.png","assets/images/docker.png","assets/images/git.png","assets/images/graphql.png","assets/images/heroku.png","assets/images/javascript.png","assets/images/jest.png","assets/images/mongodb.png","assets/images/nodejs.png","assets/images/react.png","assets/images/scss.png","assets/images/xd.png","assets/images/facebook.png","assets/images/linkedin.png","assets/images/email.png","assets/images/cv.png","assets/gaurav_cv.pdf","assets/images/wallpaper.jpg","components/header/header.js","components/techStack/techStack.js","components/work/work.js","config/techStack.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","parallaxContainer","overlay","aboutMe","header","subHeader","aboutMeBody","aboutMeDetails","aboutMeRecentWork","aboutMeFooter","techStackSection","recentWork","workContainer","heading","description","footer","__webpack_require__","p","Header","react_default","a","createElement","className","classes","href","target","src","imageIcon","cv","TechStack","props","type","stack","map","item","key","text","icon","alt","Work","style","frontEnd","backEnd","devTools","Object","defineProperty","backgroundImage","concat","wallpaper","height","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundSize","position","top","left","width","App","Fragment","join","techStack","stacks","viewBox","preserveAspectRatio","d","work","lib_default","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc6ba78b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"parallaxContainer\":\"App_parallaxContainer__22_4N\",\"overlay\":\"App_overlay__3DlFQ\",\"aboutMe\":\"App_aboutMe__9EWZ_\",\"header\":\"App_header__1rSzD\",\"subHeader\":\"App_subHeader__1g14L\",\"aboutMeBody\":\"App_aboutMeBody__2omFZ\",\"aboutMeDetails\":\"App_aboutMeDetails__rJMGW\",\"aboutMeRecentWork\":\"App_aboutMeRecentWork__2qWZs\",\"aboutMeFooter\":\"App_aboutMeFooter__2gniH\",\"techStackSection\":\"App_techStackSection__2W0pU\",\"recentWork\":\"App_recentWork__2go3v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workContainer\":\"work_workContainer__2--mc\",\"heading\":\"work_heading__3qdNu\",\"description\":\"work_description__1UXMs\",\"footer\":\"work_footer__1JEJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__kfeAm\",\"aboutMeBody\":\"header_aboutMeBody__PMUYi\"};","module.exports = __webpack_public_path__ + \"static/media/angular.ac498057.png\";","module.exports = __webpack_public_path__ + \"static/media/css.c6b27762.png\";","module.exports = __webpack_public_path__ + \"static/media/docker.9aec778f.png\";","module.exports = __webpack_public_path__ + \"static/media/git.fa06dc32.png\";","module.exports = __webpack_public_path__ + \"static/media/graphql.5f04a792.png\";","module.exports = __webpack_public_path__ + \"static/media/heroku.a8ba2467.png\";","module.exports = __webpack_public_path__ + \"static/media/javascript.9606bd47.png\";","module.exports = __webpack_public_path__ + \"static/media/jest.58716a40.png\";","module.exports = __webpack_public_path__ + \"static/media/mongodb.bcd56976.png\";","module.exports = __webpack_public_path__ + \"static/media/nodejs.57204ee7.png\";","module.exports = __webpack_public_path__ + \"static/media/react.63edc07c.png\";","module.exports = __webpack_public_path__ + \"static/media/scss.669c0c0e.png\";","module.exports = __webpack_public_path__ + \"static/media/xd.fa68e053.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook.6163476d.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.6976c96a.png\";","module.exports = __webpack_public_path__ + \"static/media/email.211d1cb7.png\";","module.exports = __webpack_public_path__ + \"static/media/cv.34352f2d.png\";","module.exports = __webpack_public_path__ + \"static/media/gaurav_cv.16189645.pdf\";","module.exports = __webpack_public_path__ + \"static/media/wallpaper.1c7b1b50.jpg\";","import React from \"react\";\nimport classes from \"./header.module.scss\";\n\nimport * as imageIcon from \"../../assets/images/index\";\nimport cv from '../../assets/gaurav_cv.pdf';\n\nconst Header = () => {\n  return (\n    <div className={classes.header}>\n      <span> Gaurav Soni</span>\n      <div className={classes.aboutMeBody}>\n        <ul>\n          <li>\n            <a href=\"https://github.com/gauravsoni1\" target=\"_blank\">\n              <img\n                src={imageIcon[\"gitIcon\"]}\n                href=\"https://github.com/gauravsoni1\"\n              />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.facebook.com/gauravs1990\" target=\"_blank\">\n              <img src={imageIcon[\"facebookIcon\"]} />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.linkedin.com/in/gaurav-soni-1a916a53/\" target=\"_blank\">\n              <img src={imageIcon[\"linkedinIcon\"]} />\n            </a>\n          </li>\n          <li>\n            <a href=\"mailto:gaurav@allcadservices.com\" target=\"_top\">\n              <img src={imageIcon[\"emailIcon\"]} />\n            </a>\n          </li>\n          <li>\n            <a href={cv} target=\"_blank\">\n              <img src={imageIcon[\"cvIcon\"]} />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport * as imageIcon from '../../assets/images/index'\n \n\nconst TechStack = props => {\n  return (\n    <div>\n      <h2>{props.type}</h2>\n      <ul>\n        {props.stack.map(item => {\n          const angItem = \"angularIcon\";\n          return (\n            <li key={item.text}>\n              <img src={imageIcon[item.icon]} alt={item.text} />\n              <span>{item.text}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TechStack;\n","import React from \"react\";\nimport * as imageIcon from \"../../assets/images/index\";\n\nimport style from \"./work.module.scss\";\n\nconst Work = () => {\n  return (\n    <div className={style.workContainer}>\n      <div className={style.heading}>\n        <span>My Profile Website</span>\n      </div>\n      <div className={style.description}>\n        <span>\n          Website to display all professional activities related to me on a single page.Learn about how SVG works, and creating custom SVG shapes.\n          Website created in ReactJS.\n        </span>\n      </div>\n      <div className={style.footer}>\n        <a href=\"https://github.com/gauravsoni1/portfolio\" target=\"_blank\">\n          <img\n            src={imageIcon[\"gitIcon\"]}\n          />\n        </a>\n        View Code\n      </div>\n    </div>\n  );\n};\n\nexport default Work;\n","const stack = {\n  frontEnd: [\n    { icon: \"reactIcon\", text: \"React JS\" },\n    { icon: \"angularIcon\", text: \"Angular JS\" },\n    { icon: \"cssIcon\", text: \"CSS\" },\n    { icon: \"scssIcon\", text: \"SCSS\" },\n    { icon: \"javascriptIcon\", text: \"Javascript\" }\n  ],\n  backEnd: [\n    { icon: \"nodejsIcon\", text: \"Node JS\" },\n    { icon: \"graphqlIcon\", text: \"GraphQL\" },\n    { icon: \"mongodbIcon\", text: \"MongoDB\" }\n  ],\n  devTools: [\n    { icon: \"dockerIcon\", text: \"Docker\" },\n    { icon: \"gitIcon\", text: \"GIT\" },\n    { icon: \"herokuIcon\", text: \"Heroku\" },\n    { icon: \"jestIcon\", text: \"Jest\" },\n    { icon: \"xdIcon\", text: \"Adobe XD\" }\n  ]\n};\n\nexport default stack;\n","import React, { Component } from \"react\";\nimport classes from \"./App.module.scss\";\nimport Emoji from \"react-emoji-render\";\n\nimport * as imageIcon from \"./assets/images/index\";\n\nimport Header from \"./components/header/header\";\nimport TechStack from \"./components/techStack/techStack\";\nimport Work from \"./components/work/work\";\n\nimport stacks from \"./config/techStack\";\nimport wallpaper from \"./assets/images/wallpaper.jpg\";\n\nconst style = {\n  backgroundImage: `url(${wallpaper})`,\n  height: \"100vh\",\n  backgroundAttachment: \"fixed\",\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n  position: \"absolute\",\n  top: \"0px\",\n  left: \"0px\",\n  width: \"100%\",\n  height: \"100%\"\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        {/* Head and Parallax */}\n        <div className={classes.parallaxContainer}>\n          <div style={style} />\n          <div className={classes.overlay}>\n            <h1>Web Developer</h1>\n            <h3>Developing Web, Line by Line</h3>\n          </div>\n        </div>\n        <Header />\n\n        {/* Tech stack section */}\n        <div className={[classes.aboutMe, classes.techStackSection].join(\" \")}>\n          <span className={classes.header}>Tech Stack</span>\n          <span className={classes.subHeader}>Knowledge is power !!</span>\n          <hr />\n          <div className={classes.aboutMeBody}>\n            <TechStack type=\"FrontEnd Stack\" stack={stacks.frontEnd} />\n            <TechStack type=\"BackEnd Stack\" stack={stacks.backEnd} />\n            <TechStack type=\"DevTools Stack\" stack={stacks.devTools} />\n          </div>\n          <svg\n            width=\"100%\"\n            height=\"75px\"\n            viewBox=\"0 0 100 100\"\n            preserveAspectRatio=\"none\"\n          >\n            <path d=\"m 0 100 l 100 -100 v 100 h -100 \"></path>\n          </svg>\n        </div>\n\n        {/* Recent work section */}\n\n        <div className={[classes.aboutMe, classes.recentWork].join(\" \")}>\n          <span className={classes.header}>Recent Works</span>\n          <span className={classes.subHeader}>Keep learning, Keep helping</span>\n          <hr />\n          <div\n            className={[classes.aboutMeBody, classes.aboutMeRecentWork].join(\n              \" \"\n            )}\n          >\n            <Work />\n            <Work />\n            <Work />\n          </div>\n          <svg\n            width=\"100%\"\n            height=\"75px\"\n            viewBox=\"0 0 100 100\"\n            preserveAspectRatio=\"none\"\n          >\n            <path d=\"m 0 100 l 100 -100 v 100 h -100 \"></path>\n          </svg>\n        </div>\n\n        {/* About me Section */}\n        <div className={classes.aboutMe}>\n          <span className={classes.header}>About Me</span>\n          <span className={classes.subHeader}>\n            Keep Learning / Keep Achieving\n          </span>\n          <hr />\n          <div\n            className={[classes.aboutMeBody, classes.aboutMeDetails].join(\" \")}\n          >\n            <p>\n              I am FullStack Web Developer, who has worked on various projects\n              and in various roles. I have worked a lot in startup environment\n              thus gathering knowledge in various domains, and stages starting\n              from product designing to final delivery.\n            </p>\n            <p>\n              I have also mentored junior developers and developed systems and\n              procedures within a company for efficient development.\n            </p>\n            <p>\n              In free time I like to workout and try out new tech stuff.\n              <Emoji text=\":punch:\" />{\" \"}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}